# Checks that operate on only a single STAC node at a time.
load("@pip//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_library", "py_test")

py_library(
    name = "node",
    srcs = glob(
        ["*.py"],
        exclude = ["*_test.py"],
    ),
    visibility = ["//visibility:public"],
)

py_test(
    name = "description_test",
    srcs = ["description_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "eo_extension_test",
    srcs = ["eo_extension_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "examples_test",
    srcs = ["examples_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "extensions_test",
    srcs = ["extensions_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "extent_test",
    srcs = ["extent_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "feature_view_test",
    srcs = ["feature_view_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "file_path_test",
    srcs = ["file_path_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_bitmask_test",
    srcs = ["gee_bitmask_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_classes_test",
    srcs = ["gee_classes_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_is_derived_test",
    srcs = ["gee_is_derived_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_provider_ids_test",
    srcs = ["gee_provider_ids_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_status_test",
    srcs = ["gee_status_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_terms_of_use_test",
    srcs = ["gee_terms_of_use_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_type_test",
    srcs = ["gee_type_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_unusual_terms_of_use_test",
    srcs = ["gee_unusual_terms_of_use_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "gee_user_uploaded_test",
    srcs = ["gee_user_uploaded_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "id_field_test",
    srcs = ["id_field_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "instrument_test",
    srcs = ["instrument_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "interval_test",
    srcs = ["interval_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "keywords_test",
    srcs = ["keywords_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "license_field_test",
    srcs = ["license_field_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "links_test",
    srcs = ["links_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "non_commercial_test",
    srcs = ["non_commercial_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "providers_test",
    srcs = ["providers_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "required_test",
    srcs = ["required_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "sar_extension_test",
    srcs = ["sar_extension_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "schema_test",
    srcs = ["schema_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "sci_extension_test",
    srcs = ["sci_extension_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "stac_version_test",
    srcs = ["stac_version_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "summaries_test",
    srcs = ["summaries_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "title_test",
    srcs = ["title_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "top_level_test",
    srcs = ["top_level_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "type_field_test",
    srcs = ["type_field_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "version_extension_test",
    srcs = ["version_extension_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "visualizations_test",
    srcs = ["visualizations_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "visualizations_image_test",
    srcs = ["visualizations_image_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)

py_test(
    name = "visualizations_table_test",
    srcs = ["visualizations_table_test.py"],
    deps = [
        ":node",
        "//checker:stac",
        "//checker:test_utils",
        requirement("absl-py"),
    ],
)
